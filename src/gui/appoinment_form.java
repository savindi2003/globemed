/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gui;

import Model.MySQL;
import java.awt.Color;
import java.awt.Dimension;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import Builder.AppointmentService;
import Builder.Appointment;
import java.util.Base64;

public class appoinment_form extends javax.swing.JPanel {

    String date;
    String time;       // e.g. "07:00 - 07:15 AM" OR "10:15"
    int doc_app_id;
    int branch_id;
    int room_id;
    int patient_id;
    String app_status;   // expected "FREE" or "BOOKED" in UI, but we will save as BOOKED
    String description;
    int type_id;         // reason id
    int doc_id;
    double price;
    
    private String safeDecrypt(String value) {
    if (value == null) {
        return null;
    }
    try {
        return new String(Base64.getDecoder().decode(value));
    } catch (IllegalArgumentException e) {
        return value; // not encoded â†’ return as-is
    }
}

    private final AppointmentService service = new AppointmentService();

    public appoinment_form(String name, String time, String room,
            String mobile, String status, int id, int patient_id, int type, String description,
            int room_id, int doc_id, String date, int branch_id, double price) {
        initComponents();

        this.time = time;
        this.doc_app_id = id;
        this.branch_id = branch_id;
        this.room_id = room_id;
        this.patient_id = patient_id;
        this.app_status = status;
        this.description = description;
        this.type_id = type;
        this.date = date;
        this.doc_id = doc_id;
        this.price = price;

        jLabel1.setText(time);

        if ("BOOKED".equals(status)) {
            jLabel2.setText(name);
            jLabel3.setText("Mobile : " + safeDecrypt(mobile));
            jLabel4.setText(room);

            jComboBox1.setVisible(true);
            jButton1.setVisible(false);

            jPanel1.setBackground(Color.RED);
            jPanel1.setPreferredSize(new Dimension(229, 200));

        } else {
            jPanel1.setPreferredSize(new Dimension(229, 200));
            jLabel2.setText("");
            jLabel3.setText("");
            jLabel4.setText("Available");
            jComboBox1.setVisible(false);
            jButton1.setVisible(true);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(51, 153, 0));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("07:00 - 07:15 AM");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Ms. Kalani Madugalla");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("0775566514");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Room 19");

        jComboBox1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Canceled", "Done", "Pause" }));

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton1.setText("Book Now");
        jButton1.setPreferredSize(new java.awt.Dimension(93, 27));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jComboBox1, 0, 189, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(19, 19, 19))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addContainerGap()))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(132, Short.MAX_VALUE)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel1)
                    .addGap(18, 18, 18)
                    .addComponent(jLabel2)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jLabel3)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jLabel4)
                    .addContainerGap(88, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        try {
            // convert "07:00 - 07:15 AM" -> "07:00" (first slot start)
            String bookingTime = time;
            if (bookingTime.contains(" - ")) {
                bookingTime = bookingTime.split(" - ")[0].trim();
            }
            // Normalize AM/PM if present: "07:00 AM" -> "07:00"
            bookingTime = bookingTime.replace(" AM", "").replace(" PM", "");

            // Build Appointment using Builder pattern
            Appointment ap = new Appointment.Builder()
                    .appointmentId(null) // auto-generate
                    .doctor(String.valueOf(doc_id))
                    .patient(String.valueOf(patient_id))
                    .date(date) // yyyy-MM-dd
                    .time(bookingTime) // HH:mm or HH:mm:ss (service will normalize)
                    .docApp(String.valueOf(doc_app_id))
                    .branch(String.valueOf(branch_id))
                    .room(String.valueOf(room_id))
                    .status("BOOKED")
                    .reason(String.valueOf(type_id))
                    .description(description)
                    .price(price)
                    .build();

            // Service layer: availability + insert
            service.book(ap);

            // UI update
            java.sql.ResultSet patientRs = MySQL.execute("SELECT `name`, `mobile` FROM `patient` WHERE `id` = '" + ap.getPatientId() + "'");
            if (patientRs.next()) {
                String patientName = patientRs.getString("name");
                String mobile = safeDecrypt(patientRs.getString("mobile"));
                java.sql.ResultSet roomRs = MySQL.execute("SELECT `name` FROM `room` WHERE `id` = '" + ap.getRoomId() + "'");

                if (roomRs.next()) {
                    String roomName = roomRs.getString("name");

                    jLabel2.setText(patientName);
                    jLabel3.setText("Mobile : " + mobile);
                    jLabel4.setText("Room : " + roomName);

                    jComboBox1.setVisible(true);
                    jButton1.setVisible(false);

                    jPanel1.setBackground(Color.ORANGE);
                    jPanel1.setPreferredSize(new Dimension(229, 200));
                }
            }

            final ImageIcon icon = new ImageIcon(getClass().getResource("/Resources/correct.png"));
            JOptionPane.showMessageDialog(this, "New Appointment Saved", "GlobeMed Healthcare Management System", JOptionPane.INFORMATION_MESSAGE, icon);

        } catch (IllegalStateException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Warning", JOptionPane.WARNING_MESSAGE);
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error while booking appointment", "Error", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
